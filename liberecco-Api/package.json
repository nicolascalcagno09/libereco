{
    "name": "@ultimasoluciones/libereco-api",
    "version": "0.0.0",
    "description": "Api de libereco helados",
    "main": "lib/src/index.js",
    "directories": {
        "lib": "lib",
        "test": "test"
    },
    "files": [
        "lib"
    ],
    "publishConfig": {
        "access": "public"
    },
    "mocha": {
        "recursive": true,
        "extension": [
            "ts"
        ],
        "require": [
            "ts-node/register"
        ]
    },
    "nyc": {
        "include": [
            "src/**/*.ts",
            "src/**/*.tsx"
        ],
        "extension": [
            ".ts",
            ".tsx"
        ],
        "require": [
            "ts-node/register"
        ],
        "reporter": [
            "text-summary",
            "html"
        ],
        "sourceMap": true,
        "instrument": true
    },
    "scripts": {
        "start": "ts-node .",
        "debug": "yarn build && node -r ts-node/register --inspect-brk=9229 src/index.ts",
        "clear": "yarn ts-node src/bin/clear.ts",
        "remove-log": "yarn ts-node src/bin/remove-log.ts",
        "pretest:run": "yarn build",
        "predb:seed": "yarn build",
        "test:run": "ts-node 'test/run-server.ts'",
        "test:coverage": "nyc mocha --exit ",
        "test": "mocha --recursive --exit",
        "test:noseed": "ts-node 'test/run-server.ts' -b --exit 2>/dev/null --test",
        "test:hold": "yarn run test:run 'test/index.ts' --test",
        "test:dev": "nodemon --exec yarn test",
        "test:debug": "nodemon --exec yarn mocha --inspect -r ts-node/register 'test/run-server.ts' --test",
        "tsc": "tsc",
        "build": "yarn run tsc",
        "predev": "yarn clear",
        "dev": "nodemon --exec yarn run dev:start",
        "dev:start": "yarn run build && yarn run start",
        "dev:test": "yarn run start --test",
        "compile": "tsc -p .",
        "lint": "tslint -c tslint.json  --project . -t codeFrame",
        "lint-fix": "tslint -c tslint.json --project . -t codeFrame --fix",
        "migration-global:create": "yarn clear && yarn build && yarn sync sync-entities && ts-node src/Persistence/Migrations/Global/MigrationsGlobal.ts",
        "migration-test:create": "ts-node src/Persistence/Migrations/Global/MigrationsGlobal.ts --test",
        "migration-global:delete": "yarn clear && yarn build && yarn sync sync-entities && ts-node src/Persistence/Migrations/Global/DropMigrationsGlobal.ts",
        "migration-test:delete": "ts-node src/Persistence/Migrations/Global/DropMigrationsGlobal.ts --test",
        "migration-create": "ts-node ./node_modules/typeorm/cli.js migration:create -n",
        "migration-run": "ts-node ./node_modules/typeorm/cli.js migration:run",
        "migration-revert": "ts-node ./node_modules/typeorm/cli.js migration:revert",
        "entity-create": "typeorm entity:create -n",
        "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
        "db:seed": "yarn run migration-global:create && ts-node src/Persistence/Seeders/Seeders.ts",
        "db:seedTest": "yarn run migration-test:delete && yarn run migration-test:create && ts-node src/Persistence/Seeders/Seeders.ts --test",
        "doc:swagger": "yarn run swagger-jsdoc -d swagger.json src/API/Routes/**/*.ts src/API/Application/Domain/Entities/*.ts src/API/Application/Domain/Enums/*.ts -o src/API/Config/swagger.json",
        "doc:typescript": "yarn typedoc --mode file --out docs",
        "doc": "yarn run doc:swagger; yarn run doc:typescript",
        "sync": "yarn run ts-node lib/src/bin/sync.js",
        "db:seedPermission": "ts-node src/Persistence/Seeders/SeedersPermissions.ts",
        "db:seedPermissionTest": "ts-node src/Persistence/Seeders/SeedersPermissions.ts --test",
        "stop": "yarn run ts-node lib/bin/stop.js",
        "reboot": "yarn run ts-node lib/bin/reboot.js",
        "execsh": "yarn run ts-node lib/bin/exec.js",
        "execsql": "yarn build  && yarn run ts-node lib/bin/execsql.js"
    },
    "dependencies": {
        "@types/ajv": "^1.0.0",
        "@types/body-parser": "^1.17.0",
        "@types/dotenv": "^6.1.1",
        "@types/node": "^11.13.13",
        "@types/socket.io": "^3.0.2",
        "amqplib": "^0.5.5",
        "axios": "^0.26.1",
        "body-parser": "^1.19.0",
        "cors": "^2.8.5",
        "dotenv": "^6.2.0",
        "exceljs": "^2.0.1",
        "express": "^4.17.1",
        "express-formidable": "^1.2.0",
        "express-list-endpoints": "git+https://github.com/emirhg/express-list-endpoints.git#feature/routeParamPattern",
        "firebase-admin": "9.3.0",
        "firebase-functions": "^3.11.0",
        "hydra-express": "^1.7.1",
        "is-base64": "^0.1.0",
        "joi": "^14.3.1",
        "mime": "^2.4.4",
        "moment": "^2.24.0",
        "mysql": "^2.17.1",
        "nodemailer": "^6.4.15",
        "oauth2-server": "^3.0.1",
        "reflect-metadata": "^0.1.13",
        "request": "^2.88.0",
        "request-promise": "^4.2.5",
        "shelljs": "^0.8.3",
        "simple-command-bus": "^1.0.7",
        "socket.io": "^4.3.2",
        "swagger-jsdoc": "^3.2.9",
        "swagger-ui-express": "^4.0.5",
        "tv4": "^1.3.0",
        "twilio": "^3.54.0",
        "typeorm": "0.2.25",
        "uuid": "^3.3.2",
        "yargs": "^13.2.4"
    },
    "devDependencies": {
        "@types/chai-as-promised": "^7.1.0",
        "@types/chai-http": "^4.2.0",
        "@types/express": "^4.17.0",
        "@types/mocha": "^5.2.7",
        "chai": "^4.2.0",
        "chai-as-promised": "^7.1.1",
        "chai-http": "^4.3.0",
        "express-mung": "^0.5.1",
        "generator-expressjs-rest": "git+https://github.com/emirhg/generator-expressjs-rest.git",
        "handlebars": "^4.1.2",
        "mocha": "^6.1.4",
        "nodemon": "^2.0.15",
        "nyc": "^14.1.1",
        "sinon": "^7.3.2",
        "sinon-express-mock": "^2.2.0",
        "ts-node": "^10.7.0",
        "tslint": "^5.17.0",
        "tslint-config-airbnb": "^5.11.1",
        "typescript": "^4.4.4",
        "yo": "^2.0.6"
    }
}
